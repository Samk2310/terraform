name: 'Terraform Dev Deployment'

on:
  push:
    branches:
      - main # Or whatever branch triggers a dev deployment
    paths:
      - 'environments/dev/**' # Trigger only on changes in the dev environment directory
  workflow_dispatch: # Allows manual trigger from the GitHub UI

jobs:
  terraform:
    name: 'Terraform Dev'
    runs-on: ubuntu-latest
    env:
      # Use GitHub Secrets for your Azure credentials
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    defaults:
      run:
        # Sets the working directory for all `run` steps in this job
        working-directory: environments/dev

    steps:
      # Check out the repository code
      - name: Checkout
        uses: actions/checkout@v4

      # Install the specified version of Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.0 # Specify your required Terraform version

      # Initialize a new or existing Terraform working directory
      - name: Terraform Init
        id: init
        run: terraform init

      # Generate an execution plan for Terraform to show proposed changes
      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan -no-color

      # Apply the execution plan to provision infrastructure
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
